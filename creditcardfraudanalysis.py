# -*- coding: utf-8 -*-
"""CreditCardFraudAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ouWQZv27hbuU_79yZmvjdgMRYhUeadYJ

Importing the Dependencies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

data = pd.read_csv('/content/creditcard.csv')

#printing first 5 rows
data.head()

data.tail()

data.info()

#no. of missing values
data.isnull().sum()

data['Class'].value_counts()

"""Preprocessing Data"""

legit = data[data.Class == 0]
fraud = data[data.Class == 1]

print(legit.shape)
print(fraud.shape)

legit.Amount.describe()

fraud.Amount.describe()

#comparing the values for transactions
data.groupby('Class').mean()

"""**USING UNDER-SAMPLING**"""

legit_sample = legit.sample(n=356)

#Concatenating the 2 data frames
new_dataset = pd.concat([legit_sample, fraud], axis=0)

new_dataset.head()
new_dataset.tail()

new_dataset['Class'].value_counts()

new_dataset.groupby('Class').mean()

X= new_dataset.drop(columns='Class', axis=1)
Y= new_dataset['Class']

print(X)

print(Y)

"""SPLITTING THE DATASET"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""**MODEL TRAINING USING LOGISITIC REGRESSION**"""

model = LogisticRegression()

model.fit(X_train, Y_train)

#ACCURACY of TRAINING DATA
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("Accuracy Training Data: ", training_data_accuracy)

#ACCURACY OF TEST DATA
X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print("Accuracy Test Data: ", test_data_accuracy)

